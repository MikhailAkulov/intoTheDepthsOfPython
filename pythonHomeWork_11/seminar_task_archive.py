# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ2
# üìå –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å –ê—Ä—Ö–∏–≤, –∫–æ—Ç–æ—Ä—ã–π —Ö—Ä–∞–Ω–∏—Ç –ø–∞—Ä—É —Å–≤–æ–π—Å—Ç–≤. –ù–∞–ø—Ä–∏–º–µ—Ä, —á–∏—Å–ª–æ –∏ —Å—Ç—Ä–æ–∫—É.
# üìå –ü—Ä–∏ –Ω–æ–≤–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞, —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–∞–Ω–µ–µ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –ø–∞—Ä—É —Å–ø–∏—Å–∫–æ–≤-–∞—Ä—Ö–∏–≤–æ–≤
# üìå list-–∞—Ä—Ö–∏–≤—ã —Ç–∞–∫–∂–µ —è–≤–ª—è—é—Ç—Å—è —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ3
# üìå –î–æ–±–∞–≤—å—Ç–µ –∫ –∑–∞–¥–∞—á–∞–º 1 –∏ 2 —Å—Ç—Ä–æ–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –¥–ª—è –∫–ª–∞—Å—Å–æ–≤.
# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ4
# üìå –î–æ—Ä–∞–±–æ—Ç–∞–µ–º –∫–ª–∞—Å—Å –ê—Ä—Ö–∏–≤ –∏–∑ –∑–∞–¥–∞—á–∏ 2.
# üìå –î–æ–±–∞–≤—å—Ç–µ –º–µ—Ç–æ–¥—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ –∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

class Archive:
    """
    –ö–ª–∞—Å—Å –∞—Ä—Ö–∏–≤. –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞, —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
    –∏–∑ —Ä–∞–Ω–µ–µ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –ø–∞—Ä—É —Å–ø–∏—Å–∫–æ–≤-–∞—Ä—Ö–∏–≤–æ–≤.
    """
    _count = None

    def __new__(cls, *args, **kwargs):
        if cls._count is None:
            cls._count = super().__new__(cls)
            cls._count.list_num = []
            cls._count.list_str = []
        else:
            cls._count.list_num.append(cls._count.num)
            cls._count.list_str.append(cls._count.string)
        return cls._count

    def __init__(self, num, string):
        self.num = num
        self.string = string

    def __str__(self):
        return f'–≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Archive —Ö—Ä–∞–Ω–∏—Ç —Å—Ç—Ä–æ–∫—É {self.string} –∏ —á–∏—Å–ª–æ {self.num}.\n' \
               f'–†–∞–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ {self.list_num} –∏ {self.list_str}'

    def __repr__(self):
        return f'Archive({self.string}, {self.num})'


if __name__ == '__main__':
    a = Archive(4, 'q')
    # print(a.list_num)
    b = Archive(3, 'y')
    c = Archive(5, 'd')
    # print(b.list_num)
    # print(b.list_str)
    # help(Archive)
    print('---------------')
    print(c)
    print('---------------')
    print(f'{c}')
    print('---------------')
    print(repr(c))
    print('---------------')
    print(f'{c = }')
