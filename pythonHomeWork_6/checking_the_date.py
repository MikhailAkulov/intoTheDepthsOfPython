# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ7 (–∏–∑ —Å–µ–º–∏–Ω–∞—Ä–∞)
# üìå –°–æ–∑–¥–∞–π—Ç–µ –º–æ–¥—É–ª—å –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –Ω—ë–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ DD.MM.YYYY
# üìå –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Å—Ç–∏–Ω—É, –µ—Å–ª–∏ –¥–∞—Ç–∞ –º–æ–∂–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å –∏–ª–∏ –ª–æ–∂—å, –µ—Å–ª–∏ —Ç–∞–∫–∞—è –¥–∞—Ç–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.
# üìå –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –¥–æ–≥–æ–≤–æ—Ä–∏–º—Å—è, —á—Ç–æ –≥–æ–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ [1, 9999].
# üìå –í–µ—Å—å –ø–µ—Ä–∏–æ–¥ (1 —è–Ω–≤–∞—Ä—è 1 –≥–æ–¥–∞ - 31 –¥–µ–∫–∞–±—Ä—è 9999 –≥–æ–¥–∞) –¥–µ–π—Å—Ç–≤—É–µ—Ç –ì—Ä–∏–≥–æ—Ä–∏–∞–Ω—Å–∫–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å.
# üìå –ü—Ä–æ–≤–µ—Ä–∫—É –≥–æ–¥–∞ –Ω–∞ –≤–∏—Å–æ–∫–æ—Å–Ω–æ—Å—Ç—å –≤—ã–Ω–µ—Å—Ç–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é –∑–∞—â–∏—â—ë–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é.

# –î/–ó. –ó–∞–¥–∞–Ω–∏–µ ‚Ññ2:
# –í –º–æ–¥—É–ª—å —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥–∞—Ç—ã –¥–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ —Å –ø–µ—Ä–µ–¥–∞—á–µ–π –¥–∞—Ç—ã –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É.

from sys import argv

__all__ = ['checking_for_existence']


def checking_for_existence(input_date: str) -> bool:
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ–µ—Ä–∫–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã

    :param input_date: –¥–∞—Ç–∞
    :return: True –∏–ª–∏ False
    """
    numbers = list(map(int, input_date.split('.')))
    day, month, year = numbers
    if 1 <= year <= 9999 or 1 <= month <= 12 or 1 <= day <= 31:
        match month:
            case 4 | 6 | 9 | 11:
                if day == 31:
                    return False
                else:
                    return True
            case 2:
                if day == 29 and not _checking_for_a_leap_year(year) or day > 29:
                    return False
                else:
                    return True
            case _:
                return True
    return False


def _checking_for_a_leap_year(year: int) -> bool:
    """
    –ó–∞—â–∏—â–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞—Ç—ã –Ω–∞ –≤–∏—Å–æ–∫–æ—Å–Ω—ã–π –≥–æ–¥

    :param year: –≥–æ–¥ –∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∞—Ç—ã
    :return: True –∏–ª–∏ False
    """
    return (year % 4 == 0 and year % 100 != 0) or year % 400 == 0


test_data_1 = "01.01.0001"
test_data_2 = "31.12.9999"
test_data_3 = "29.02.1988"
test_data_4 = "29.02.2023"
test_data_5 = "13.04.2023"

if __name__ == '__main__':
    """–î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–∑ —Ñ–∞–π–ª–∞"""
    # print(f'–î–∞—Ç–∞ {test_data_1}: {checking_for_existence(test_data_1)}')
    # print(f'–î–∞—Ç–∞ {test_data_2}: {checking_for_existence(test_data_2)}')
    # print(f'–î–∞—Ç–∞ {test_data_3}: {checking_for_existence(test_data_3)}')
    # print(f'–î–∞—Ç–∞ {test_data_4}: {checking_for_existence(test_data_4)}')
    # print(f'–î–∞—Ç–∞ {test_data_5}: {checking_for_existence(test_data_5)}')

    """–î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ —Å –≤–≤–æ–¥–æ–º –¥–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ DD.MM.YYYY"""
    name, arg = argv
    print(checking_for_existence(arg))
